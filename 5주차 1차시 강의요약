# 제어공학1 5주차 1차시 강의 요약: State Variable 모델과 State Space Equation

## 1. State Variable 모델의 도입 배경 및 목적
이번 강의의 핵심은 state variable model이며, 이는 시스템의 핵심인 state를 정의하는 데 중점을 둡니다. 기존에 미분방정식을 직관적으로 유도하여 풀던 방식에서 나아가, state라는 개념을 도입하여 시스템 내부에 의미 있는 것들을 먼저 정의하고 이를 중심으로 문제를 체계적으로 풀고자 합니다.

State variable 모델이 도입된 주요 동기 및 장점:
1. 문제의 체계화 및 분업화: 복잡한 문제를 컴퓨터에게 시키거나 여러 사람이 분업하여 풀기 위해 문제 자체를 체계적으로 쪼갤 필요가 있었습니다.  
2. 컴퓨터 계산의 용이성: 궁극적으로 복잡한 미분방정식을 컴퓨터가 계산하기 쉬운 1차 행렬 미분방정식 형태로 바꾸어 계산 효율성을 높이는 것이 목표입니다.  
3. 물리적 의미 부여: 문제를 푸는 과정과 해(solution)에 물리적 의미를 부여할 수 있습니다. 특히, State를 기준으로 문제를 풀면 최종 결과(x(t))가 초기 상태에 의한 결과와 입력에 의한 결과로 명확하게 분리되어 해석이 용이해집니다.

## 2. State 변수의 정의 및 미분방정식 변환

### 2.1. 2차 미분방정식의 1차 변환
State variable 모델의 가장 단순한 효과는 N차 미분방정식을 N개의 1차 미분방정식 연립방정식으로 바꾸는 것입니다.  
예시 (질량-스프링-댐퍼 모델): 원래 2차 미분방정식은 미분항이 두 번 들어가므로, state를 2개(변위 x1, 속도 x2)로 정의하면, 이 2차 방정식은 2개의 1차 미분방정식 연립방정식으로 변환됩니다. 1차 미분방정식의 연립 방정식은 행렬을 이용하면 결국 1차 미분방정식과 같은 형태로 취급되므로, 컴퓨터 계산에 훨씬 유리합니다.

### 2.2. State 설정 원칙 (독립성)
- State는 우리가 정의하기 나름이지만, N차 미분방정식을 다룰 경우 N개의 독립적인 state를 세팅해야 합니다.  
- 독립적인 State: 두 state가 단순히 상수배 관계이거나 항등식이 되는 관계는 피해야 합니다. 수학적으로 말하면 수직이 아닌(orthogonal하지 않은) 관계에 있는 state를 잡으면 문제가 발생합니다.

## 3. State Space Equation (상태 공간 방정식)
복잡한 시스템에서 state는 state vector `x(t)` 형태로 표현되며, 이를 통해 미분방정식을 1차 행렬 미분방정식으로 변환합니다. 이 변환의 결과물인 State space equation은 두 개의 식으로 구성됩니다:

1. 상태 미분방정식 (State Differential Equation):  
   `ẋ = A x + B u`  
   이는 여러 개의 1차 미분방정식을 하나의 1차 행렬 미분방정식으로 표현한 것입니다.

2. 출력방정식 (Output Equation):  
   `y = C x + D u`  
   State와 Input의 조합으로 Output을 만들어내는 방정식입니다.

핵심적인 목표는 최초의 미분방정식을 이 State space equation으로 바꾸는 것입니다.

## 4. State Transition Matrix
1차 미분방정식을 Laplace Transform을 이용하여 풀었을 때, 해 `x(t)`는 다음과 같은 꼴로 정리됩니다:

`x(t) = Φ(t) x(0) + ∫_0^t Φ(t−τ) B u(τ) dτ`

- `x(0)`은 초기 상태(initial state)를 의미합니다.  
- 적분 바깥쪽 항 `Φ(t) x(0)`은 초기 상태가 변화된 결과(자연응답)를 나타내고, 적분 안쪽 항은 입력 `u(t)`에 의한 응답(강제응답)을 나타냅니다.  
- 행렬 기준으로 변환 함수 역할을 하는 `Φ(t)`를 state transition matrix(상태전이행렬)라고 부릅니다.  
- 연속시스템의 경우 `Φ(t) = e^{A t}`로 표현할 수 있습니다(행렬지수).

## 5. 4차 미분방정식 예제 (카트 시스템)
질량 `M1`, `M2`를 가진 카트 시스템의 경우, 각각에 대해 뉴턴의 법칙을 적용하면 각각 2차 미분방정식이 하나씩 생겨 총 4차 미분방정식이 만들어집니다. 이를 State variable 모델로 바꾸기 위해 4개의 state를 정의합니다:

- `x1`: p(t) (M1의 변위)  
- `x2`: q(t) (M2의 변위)  
- `x3`: ṗ(t) (M1의 속도)  
- `x4`: q̇(t) (M2의 속도)

이 4개의 state를 이용하면 4차 미분방정식은 최종적으로 4개의 1차 미분방정식 연립 방정식으로, 다시 1차 행렬 미분방정식 `ẋ = A x + B u`으로 바뀌게 됩니다. 이렇게 구성된 A, B, C, D 행렬은 MATLAB의 `ss`, `initial` 등의 명령어를 사용하여 시스템의 거동을 쉽게 시뮬레이션하고 분석하는 데 활용할 수 있습니다.

## 6. 장점 및 요약
- 장점:
  - 문제의 체계화 및 분업화 가능.
  - 컴퓨터 시뮬레이션 및 수치해석에 적합(1차 행렬 미분방정식 형태).
  - 해가 초기조건에 의한 부분과 입력에 의한 부분으로 명확히 분리되어 해석 용이.

- 유의사항:
  - 상태 선택 시 독립성(선형독립)을 확보해야 함.
  - 상태공간 모델은 시간영역 해석에 강하지만, 전달함수(주파수영역)와의 관계도 함께 이해하는 것이 좋음.

---
